{"version":3,"sources":["components/Loading.jsx","services/userAPI.js","images/logo.svg","pages/Login.jsx","images/headerLogo.svg","components/Header.jsx","services/searchAlbumsAPI.js","pages/Search.jsx","services/musicsAPI.js","components/MusicCard.jsx","services/favoriteSongsAPI.js","pages/Album.jsx","pages/Favorites.jsx","components/Input.jsx","pages/ProfileEdit.jsx","pages/Profile.jsx","pages/NotFound.jsx","App.js","index.js"],"names":["Loading","className","Component","USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","updateUser","updatedUser","Login","handleInputChange","target","value","buttonDisabled","length","setState","fetchCreateUSer","a","state","messageLoading","redirectCondition","iSbuttonDisabled","this","to","src","logo","alt","type","onChange","placeholder","disabled","onClick","Header","findName","loading","Username","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","fetch","APIResponse","json","results","map","artistId","artistName","collectionId","collectionName","collectionPrice","artworkUrl100","releaseDate","trackCount","Search","handleSubmit","NameSearch","albuns","SearchName","SearchEnd","getMusics","id","request","requestJson","MusicCard","props","track","trackId","trackName","previewUrl","handleFavorite","favorite","controls","kind","htmlFor","checked","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","Album","objMusic","favoritesSongs","fetchALbumMusics","musics","songs","slice","isFavorite","some","Favorites","getFavoritesMusicsState","getFavorites","Input","testid","dica","ProfileEdit","GetUserStorage","veryfyInputs","onUpdtateClick","event","history","preventDefault","push","atendidas","every","element","test","redirect","Profile","getInfos","NotFound","App","exact","path","component","params","match","render","route","React","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1044fe41.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/loading.css\";\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className='loading'>\n        <div className='load'></div>\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","export default __webpack_public_path__ + \"static/media/logo.9c05888d.svg\";","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\nimport Loading from \"../components/Loading\";\nimport { createUser } from \"../services/userAPI\";\nimport \"../styles/login.css\";\nimport logo from \"../images/logo.svg\";\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      iSbuttonDisabled: true,\n      messageLoading: false,\n      redirectCondition: false,\n    };\n  }\n\n  handleInputChange = ({ target }) => {\n    const { name, value } = target;\n    const VALUE_MIN_BUTTON = 3;\n    // esta linha faz a comparação se o texto no input é menor que 3, retornando true ou false\n    const buttonDisabled = value.length < VALUE_MIN_BUTTON;\n    this.setState({\n      [name]: value,\n      // caso button disabled seja menor que três o valor setado é true e o botão segue dabilitado\n      iSbuttonDisabled: buttonDisabled,\n    });\n  };\n\n  fetchCreateUSer = async () => {\n    const { name } = this.state;\n    // esta linha serve para atualizar o state e renderizar o loading na tela enquanto\n    // a requisição é feita\n    this.setState({ messageLoading: true });\n    await createUser({ name });\n\n    this.setState({ messageLoading: false, redirectCondition: true });\n  };\n\n  render() {\n    const { name, iSbuttonDisabled, messageLoading, redirectCondition } =\n      this.state;\n    return (\n      <div data-testid='page-login' className='login-container'>\n        {redirectCondition && <Redirect to='/search' />}\n        {messageLoading ? (\n          <Loading />\n        ) : (\n          <>\n            {\" \"}\n            <img src={logo} className='logo-image' alt='logo.svg' />\n            <form>\n              <label>\n                Usuário\n                <input\n                  type='text'\n                  value={name}\n                  name='name'\n                  data-testid='login-name-input'\n                  onChange={this.handleInputChange}\n                  placeholder='Ex pedro'\n                  className='input-user'\n                />\n              </label>\n              <button\n                type='button'\n                disabled={iSbuttonDisabled}\n                onClick={this.fetchCreateUSer}\n                data-testid='login-submit-button'\n                className='login-btn'\n              >\n                Entrar\n              </button>\n            </form>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/headerLogo.806a1a7d.svg\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getUser } from \"../services/userAPI\";\nimport \"../styles/header.css\";\nimport logo from \"../images/headerLogo.svg\";\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      Username: \"\",\n      image: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.findName();\n  }\n\n  findName = async () => {\n    this.setState({ loading: true });\n    const name = await getUser();\n    this.setState({\n      Username: name.name,\n      image: name.image,\n      loading: false,\n    });\n  };\n\n  render() {\n    const { Username, image = {} } = this.state;\n    return (\n      <header data-testid='header-component'>\n        <div className='first-header' data-testid='header-user-name'>\n          <img src={logo} className='header-logo' alt='logo' />\n          <div className='container-user'>\n            <img src={image} className='img-perfil' alt='' />\n            {Username}\n          </div>\n        </div>\n        <nav>\n          <ul className='header-link'>\n            <li>\n              <Link to='/favorites' data-testid='link-to-favorites'>\n                {\" \"}\n                Favorites\n              </Link>\n            </li>\n            <li>\n              <Link to='/search' data-testid='link-to-search'>\n                {\" \"}\n                Search\n              </Link>\n            </li>\n            <li>\n              <Link to='/profile' data-testid='link-to-profile'>\n                {\" \"}\n                Profile\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport Loading from \"../components/Loading\";\nimport searchAlbumsAPI from \"../services/searchAlbumsAPI\";\nimport \"../styles/search.css\";\n\nclass Search extends Component {\n  constructor() {\n    super();\n    this.state = {\n      artistName: \"\",\n      iSbuttonDisabled: true,\n      albuns: [],\n      loading: false,\n      // este campo é para controlar se a busca de albuns está concluida, se estiver ela mostrará na tela a msg solicitada\n      SearchEnd: false,\n      // este atributo controla o ultimo  nome pesquisado mesmo depois de resetar o input\n      SearchName: \"\",\n    };\n  }\n\n  // esta função é chamada a cada alteração no input, ela também altera o Search end para false para poder remover a msg de resulto da tela\n  handleInputChange = ({ target }) => {\n    const { name, value } = target;\n    const VALUE_MIN_BUTTON = 2;\n\n    const buttonDisabled = value.length < VALUE_MIN_BUTTON;\n    this.setState({\n      [name]: value,\n      // caso button disabled seja menor que três o valor setado é true e o botão segue dabilitado\n      iSbuttonDisabled: buttonDisabled,\n      SearchEnd: false,\n    });\n  };\n\n  handleSubmit = async () => {\n    const { artistName } = this.state;\n    // name search serve para ter o antigo nome buscado pelo value do input, mesmo após o input ser limpo\n    const NameSearch = artistName;\n    // aqui o state é alterado para exibir a msg de loading\n    this.setState({ loading: true });\n    // esta linha faz a busca dos albuns a partir do valor que está no state\n    const albuns = await searchAlbumsAPI(artistName);\n    // aqui após a busca altero o state, inserindo todos os albuns encontrados, limpando o artistname, dizendo que a serach terminou\n    // e tirando a msg de loading\n    this.setState({\n      SearchName: NameSearch,\n      SearchEnd: true,\n      artistName: \"\",\n      albuns,\n      loading: false,\n    });\n  };\n\n  render() {\n    const {\n      iSbuttonDisabled,\n      artistName,\n      albuns,\n      loading,\n      SearchEnd,\n      SearchName,\n    } = this.state;\n    return (\n      <div data-testid='page-search'>\n        <Header />\n        <div className='search-container'>\n          <input\n            name='artistName'\n            type='text'\n            data-testid='search-artist-input'\n            value={artistName}\n            onChange={this.handleInputChange}\n            placeholder='Digite o nome De um cantor ex: Thiaguinho'\n          />\n          <button\n            data-testid='search-artist-button'\n            type='submit'\n            disabled={iSbuttonDisabled}\n            onClick={this.handleSubmit}\n          >\n            Procurar\n          </button>\n        </div>\n        <div>\n          {/* esta render condicional se o search tiver sido concluido e tiver encontrado albuns mostra a msg abaixo */}\n          {SearchEnd && albuns.length > 0 && (\n            <p className='text-result'>\n              Resultado de álbuns de:{\" \"}\n              <span className='search-Name'>{SearchName}</span>\n            </p>\n          )}\n          {/* esta renderização ocorre se tiver sido feito uma busca e não encontrar albuns */}\n          {SearchEnd && albuns.length < 1 && (\n            <p className='text-result'>Nenhum álbum foi encontrado</p>\n          )}\n          {/* esta msg de loading é controla através do state, quando deve e não deve aparecer */}\n          {loading ? (\n            <Loading />\n          ) : (\n            <ul className='album-container'>\n              {albuns.map(({ collectionId, collectionName, artworkUrl100 }) => (\n                // aqui renderizamos todos os nomes de albuns como link na tela\n                <li key={collectionId}>\n                  <Link\n                    data-testid={`link-to-album-${collectionId}`}\n                    to={`/album/${collectionId}`}\n                  >\n                    <img src={artworkUrl100} alt={collectionName} />\n                    <p className='album-name'>{collectionName}</p>\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport \"../styles/musicsCard.css\";\n\nclass MusicCard extends Component {\n  render() {\n    const {\n      track: { trackId, trackName, previewUrl },\n      track,\n      handleFavorite,\n      favorite,\n    } = this.props;\n    return (\n      <div className='card-container'>\n        <span>{trackName}</span>\n        <audio data-testid='audio-component' src={previewUrl} controls>\n          <track kind='captions' />O seu navegador não suporta o elemento\n          <code>audio</code>.\n        </audio>\n        <label htmlFor={trackId}>\n          <input\n            data-testid={`checkbox-music-${trackId}`}\n            type='checkbox'\n            id={trackId}\n            // no evento ela chama uma calback para poder passar parametros pra handle, a handle recebe o value do checked após o evento e o objeto inteiro da música\n            onChange={({ target: { checked } }) =>\n              handleFavorite(track, checked)\n            }\n            checked={favorite}\n          />\n          Favorita\n        </label>\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  track: PropTypes.shape({\n    previewUrl: PropTypes.string.isRequired,\n    trackName: PropTypes.string.isRequired,\n    trackId: PropTypes.number.isRequired,\n  }).isRequired,\n  favorite: PropTypes.bool.isRequired,\n  handleFavorite: PropTypes.func.isRequired,\n};\n\nexport default MusicCard;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"../components/Header\";\nimport getMusics from \"../services/musicsAPI\";\nimport MusicCard from \"../components/MusicCard\";\nimport {\n  addSong,\n  getFavoriteSongs,\n  removeSong,\n} from \"../services/favoriteSongsAPI\";\nimport Loading from \"../components/Loading\";\nimport \"../styles/album.css\";\n\n// está lógica foi desenvolvida em conjunto com Rafael França\nclass Album extends Component {\n  constructor() {\n    super();\n    this.state = {\n      songs: [],\n      artistName: \"\",\n      collectionName: \"\",\n      artworkUrl100: \"\",\n      loading: false,\n      favoritesSongs: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchALbumMusics();\n  }\n\n  // esta função é chamada sempre que é clicado no checkbox se ele foi marcado ela adiciona uma musica no local storage,\n  // se foi desmarcado ela removclassName='album-musicse da localstorage, esta verificação através do value do input checked que é recebido como segundo parametro nesta func\n  handleFavorite = async (objMusic, checked) => {\n    // mostra a msg de loading\n    this.setState({ loading: true });\n    // se checkbox é marcado ele adiciona uma musica na localstorage\n    if (checked) await addSong(objMusic);\n    // se é desmarcado ele remove uma msc da localstorage\n    if (!checked) await removeSong(objMusic);\n    // após adicionar ou remover ele pega o array de músicas favoritas atualizado e seta no state\n    const favoritesSongs = await getFavoriteSongs();\n    // remove o loading e seta as novas músicas\n    this.setState({ loading: false, favoritesSongs });\n  };\n\n  fetchALbumMusics = async () => {\n    const { id } = this.props;\n    // ele busca as musicas de acordo com o id recebido por parametro via url, o id do album\n    const musics = await getMusics(id);\n    // esta linha desestrutra o nome do artista, do album, e a imagem.  todos estão no index 0 do retorno da props\n    const { artistName, collectionName, artworkUrl100 } = musics[0];\n    // após buscar as músicas esta função pega todas as musicas da localstorage para poder validar depois se ela é favorita ou não\n    const favoritesSongs = await getFavoriteSongs();\n    this.setState({\n      // como a primeira posição não é uma musica eu quero os elementos a partir do index 1\n      songs: musics.slice(1),\n      artistName,\n      collectionName,\n      artworkUrl100,\n      favoritesSongs,\n    });\n  };\n\n  // esta função verifica se uma musica é favorita, ela recebe o id da musica e percorre o array de musicas do state, se algum elemento tiver o mesmo id ela retorna true\n  // este valor true ou false é passado para o campo da checkbox do cardalbum. se for true o checkbox será marcado se for false ele ficara desmarcado\n  isFavorite = (id) => {\n    const { favoritesSongs } = this.state;\n    return favoritesSongs.some(({ trackId }) => trackId === id);\n  };\n\n  render() {\n    const { artistName, collectionName, artworkUrl100, songs, loading } =\n      this.state;\n    return (\n      <div data-testid='page-album'>\n        <Header />\n        <main className='album-musics'>\n          {loading ? (\n            <Loading />\n          ) : (\n            <>\n              <div className='album-image'>\n                <img src={artworkUrl100} alt={collectionName} />\n                <p data-testid='artist-name'>{artistName}</p>\n                <p data-testid='album-name'>{collectionName}</p>\n              </div>\n              <div className='tracks-container'>\n                {songs.map((track) => (\n                  // chama o componente que cria a musica\n                  <MusicCard\n                    key={track.trackId}\n                    // esta função vai ser executada no onchange do evento\n                    handleFavorite={this.handleFavorite}\n                    // passa o obj inteiro da música para ser desestruturado la no componente\n                    track={track}\n                    // executa a função que verifica se o elemento esta contido no array de favoritos, está função sempre retorna o bool\n                    favorite={this.isFavorite(track.trackId)}\n                  />\n                ))}\n              </div>\n            </>\n          )}\n        </main>\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default Album;\n","import React, { Component } from \"react\";\nimport Header from \"../components/Header\";\nimport Loading from \"../components/Loading\";\nimport { getFavoriteSongs, removeSong } from \"../services/favoriteSongsAPI\";\nimport MusicCard from \"../components/MusicCard\";\nimport \"../styles/favorites.css\";\n\nclass Favorites extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favoritesSongs: [],\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getFavoritesMusicsState();\n  }\n\n  // esta função executa quando o componente carrega, ela busca todas as musicas favoritas da localstorage e coloca no state\n  getFavoritesMusicsState = async () => {\n    this.setState({ loading: true });\n    const getFavorites = await getFavoriteSongs();\n    this.setState({\n      loading: false,\n      favoritesSongs: getFavorites,\n    });\n  };\n\n  // esta função é executada sempre que é clicado no checkbox, caso ele foi desmarcado remove a musica do localstorage e atualiza o state das músicas\n  handleFavorite = async (track, checked) => {\n    this.setState({ loading: true });\n    if (!checked) await removeSong(track);\n    const getFavorites = await getFavoriteSongs();\n    this.setState({\n      loading: false,\n      favoritesSongs: getFavorites,\n    });\n  };\n\n  // esta função verifica se o elemento  esta com checkbox marcado  ou desmarcado\n  isFavorite = (id) => {\n    const { favoritesSongs } = this.state;\n    return favoritesSongs.some(({ trackId }) => trackId === id);\n  };\n\n  render() {\n    const { favoritesSongs, loading } = this.state;\n    return (\n      <div data-testid='page-favorites'>\n        <Header />\n        <main>\n          <h2 className='favorites-title'>Músicas favoritas:</h2>\n          {loading && <Loading />}\n          <div className='card-musics'>\n            {favoritesSongs.map((track) => (\n              // chama o componente que cria a musica\n              <MusicCard\n                key={track.trackId}\n                // esta função vai ser executada no onchange do evento\n                handleFavorite={this.handleFavorite}\n                // passa o obj inteiro da música para ser desestruturado la no componente\n                track={track}\n                // esta linha sempre retorna true ou false e define se o checkbox esta marcado ou desmarcado.\n                favorite={this.isFavorite(track.trackId)}\n              />\n            ))}\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n","import React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\n\nclass Input extends Component {\n  render() {\n    const { name, value, callback, type, testid, dica } = this.props;\n    return (\n      <label htmlFor={name}>\n        {name}\n        <input\n          type={type}\n          name={name}\n          id={name}\n          value={value}\n          data-testid={testid}\n          onChange={callback}\n          placeholder={dica}\n        />\n      </label>\n    );\n  }\n}\n\nInput.propTypes = {\n  name: propTypes.string,\n  value: propTypes.string,\n  handleinputChange: propTypes.func,\n  type: propTypes.string,\n  dica: propTypes.string,\n}.isRequired;\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Header from \"../components/Header\";\nimport { getUser, updateUser } from \"../services/userAPI\";\nimport Input from \"../components/Input\";\nimport Loading from \"../components/Loading\";\nimport \"../styles/editprofile.css\";\n\nclass ProfileEdit extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {},\n      loading: false,\n      buttonDisabled: true,\n      redirect: false,\n    };\n  }\n\n  componentDidMount() {\n    this.GetUserStorage();\n  }\n\n  // esta função pega as informações do usuario e cria um objeto no state ao componente ser montado\n  GetUserStorage = async () => {\n    this.setState({ loading: true });\n    const user = await getUser();\n    this.setState(\n      {\n        loading: false,\n        user,\n      },\n      () =>\n        this.setState({\n          // esta linha é para após carregar a pagina validar se o button inicialmente começa habilitado ou desabilitado\n          buttonDisabled: this.veryfyInputs(),\n        })\n    );\n  };\n\n  // esta função lida com alterações no input setando o novo state de infos\n  handleInputChange = ({ target }) => {\n    const { user } = this.state;\n    const { name, value } = target;\n    user[name] = value;\n    const buttonDisabled = this.veryfyInputs();\n    this.setState({ user, buttonDisabled });\n  };\n\n  // esta função roda quando o botão de salvar é clicado, ela chama a função que atualiza o user no storage\n  onUpdtateClick = async (event) => {\n    const { history } = this.props;\n    // esta linha é para tirar  o comportamento padrao do browser\n    event.preventDefault();\n    const { user } = this.state;\n    // essa linha atualiza o localstorage\n    await updateUser(user);\n    // esta linha seta um push no history o que faz com que a pagina seja redirecionada automaticamente\n    // foi feito com ajuda de Bruno Alves\n    history.push(\"/profile\");\n  };\n\n  veryfyInputs = () => {\n    const {\n      user: { name, email, description, image },\n    } = this.state;\n    let atendidas = 0;\n    const array = [name, email, description, image];\n    if (array.every((element) => element.length > 1)) atendidas += 1;\n    // Regex from https://stackoverflow.com/questions/4964691/super-simple-email-validation-with-javascript\n    if (/^\\S+@\\S+\\.\\S+$/.test(email)) atendidas += 1;\n    // o valor minimo é 2 pois dois ifs precisam ser atendidos pro button ser desabilitado\n    const MINIMUM_FOR_VALIDATION = 2;\n    // se os ifs atendidos forem diferentes de 2 true e o button segue desabilitado se for igual a dois ela retorna false  e ativa o button\n    return atendidas !== MINIMUM_FOR_VALIDATION;\n  };\n\n  render() {\n    const {\n      user: { name, email, image, description },\n      loading,\n      buttonDisabled,\n      redirect,\n    } = this.state;\n    return (\n      <>\n        {redirect && <Redirect to='/profile' />}\n        <div data-testid='page-profile-edit'>\n          <Header />\n          <main>\n            {loading ? (\n              <Loading />\n            ) : (\n              <form className='edit-infos'>\n                <Input\n                  name='name'\n                  type='text'\n                  testid='edit-input-name'\n                  value={name}\n                  callback={this.handleInputChange}\n                  dica='ex Pedro'\n                />\n\n                <Input\n                  name='email'\n                  type='text'\n                  testid='edit-input-email'\n                  value={email}\n                  callback={this.handleInputChange}\n                  dica='ex Pedro@gmail.com'\n                />\n                <Input\n                  name='description'\n                  type='text'\n                  testid='edit-input-description'\n                  value={description}\n                  callback={this.handleInputChange}\n                  dica='Tenho 25 anos, adoro pagode...'\n                />\n                <Input\n                  name='image'\n                  type='text'\n                  testid='edit-input-image'\n                  value={image}\n                  callback={this.handleInputChange}\n                  dica='insira uma url de imagem'\n                />\n                <button\n                  type='submit'\n                  data-testid='edit-button-save'\n                  disabled={buttonDisabled}\n                  onClick={this.onUpdtateClick}\n                >\n                  Editar perfil\n                </button>\n              </form>\n            )}\n          </main>\n        </div>\n      </>\n    );\n  }\n}\n\nProfileEdit.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default ProfileEdit;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport Loading from \"../components/Loading\";\nimport { getUser } from \"../services/userAPI\";\nimport \"../styles/profile.css\";\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      user: {},\n    };\n  }\n\n  componentDidMount() {\n    this.getInfos();\n  }\n\n  getInfos = async () => {\n    this.setState({ loading: true });\n    const user = await getUser();\n    this.setState({\n      loading: false,\n      user,\n    });\n  };\n\n  render() {\n    const {\n      loading,\n      user: { description, email, image, name },\n    } = this.state;\n    return (\n      <div data-testid='page-profile'>\n        <Header />\n        <main>\n          {loading ? (\n            <Loading />\n          ) : (\n            <div className='div-container'>\n              <img src={image} alt={name} data-testid='profile-image' />\n              <div className='text-container'>\n                <p>\n                  Nome:<span>{name}</span>\n                </p>\n                <p>\n                  Email: <span>{email}</span>\n                </p>\n                <p>\n                  Descrição: <span>{description}</span>\n                </p>\n              </div>\n              <Link to='/profile/edit' className='profile-edit'>\n                Profile Edit\n              </Link>\n            </div>\n          )}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\n\nclass NotFound extends Component {\n  render() {\n    return <div data-testid=\"page-not-found\" />;\n  }\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from \"react-router-dom/cjs/react-router-dom.min\";\nimport Login from \"./pages/Login\";\nimport Search from \"./pages/Search\";\nimport Album from \"./pages/Album\";\nimport Favorites from \"./pages/Favorites\";\nimport ProfileEdit from \"./pages/ProfileEdit\";\nimport Profile from \"./pages/Profile\";\nimport NotFound from \"./pages/NotFound\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path='/trybe-tunes' component={Login} />\n            <Route path='/search' component={Search} />\n            <Route\n              path='/album/:id'\n              component={({ match: { params } }) => <Album {...params} />}\n            />\n            <Route path='/favorites' component={Favorites} />\n            <Route\n              path='/profile/edit'\n              render={(route) => <ProfileEdit {...route} />}\n            />\n            <Route path='/profile' component={Profile} />\n            <Route path='/*' component={NotFound} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}